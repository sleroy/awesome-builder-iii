AWSTemplateFormatVersion: "2010-09-09"
Description: This template provision a VPC for our POC.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Environment configuration"
        Parameters:
          - BusinessUnit
          - Environment          
      - Label:
          default: VPC Configuration
        Parameters:
    ParameterLabels:
      BusinessUnit:
        default: "Provides the Business Unit these resources"
      Environment:
        default: "Provides an environment (dev,test, prod)"
Parameters:
  BusinessUnit:
    Description: Defines the Business Unit that uses thes resources
    Default: OnPremise
    Type: String
  Environment:
    Description: Choose an environment where you want to create this stack
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - SIT
      - UAT
      - prod
  AvailabilityZone1:
    Description: "Availability zone 1"
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AvailabilityZone2:
    Description: "Availability zone 1"
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b

Resources:
  # Network
  #-------------------------------------------------
  CloudVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.20.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  CloudPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudVPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: 10.20.1.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  CloudPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudVPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  CloudPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudVPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: 10.20.11.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  CloudPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudVPC
      AvailabilityZone: !Ref AvailabilityZone1
      CidrBlock: 10.0.12.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment          
  # Route and NACL
  #-------------------------------------------------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CloudVPC
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayVpcAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CloudPublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1RouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CloudPublicSubnet2
      RouteTableId: !Ref PublicRouteTable      
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CloudVPC
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CloudPrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable          
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CloudPrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable         
  # Internet connectivity
  #-------------------------------------------------
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn:
      - "CloudVPC"
    Properties:
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  InternetGatewayVpcAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref CloudVPC     
  ## NAT GATEWAY
  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: 
      - CloudVPC
      - NatPublicIP
      - InternetGateway
    Properties:
      SubnetId: !Ref OnPremPublicSubnet
      AllocationId: !GetAtt NatPublicIP.AllocationId
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment
  ## ELASTIC IP
  NatPublicIP:
    Type: AWS::EC2::EIP
    DependsOn: CloudVPC
    Properties:
      Domain: vpc
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment            
# Monitoring
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html
  CloudVPCResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: cloudvpc_group
      Description: "CloudVPC resource group"
      Tags:
        - Key: businessUnit
          Value: !Ref BusinessUnit
        - Key: environment
          Value: !Ref Environment      
  ApplicationInsights:
    Type: AWS::ApplicationInsights::Application 
    Properties:
      ResourceGroupName: !Ref CloudVPCResourceGroup
      AutoConfigurationEnabled: true
#-------------------------------------------------
# Storage
#-------------------------------------------------
  UnprocessedVideosBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: LogDeliveryWrite
            
  MainBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucket  
  ErrorVideosBucket:
  ReadyVideosBucket:
  AMIBucket:
  LogBucket:

Outputs:
  CloudVPC:
    Description: Cloud VPC
    Value: !GetAtt CloudVPC.VpcId
    Export:      
      Name: !Sub "${AWS::StackName}-CloudVPC"
  CloudPublicSubnet1:
    Description: Public Subnet 1 for Cloud VPC
    Value: !GetAtt CloudPublicSubnet1.SubnetId
    Export:      
      Name: !Sub "${AWS::StackName}-CloudPublicSubnet1"
  CloudPublicSubnet2:
    Description: Public Subnet 1 for Cloud VPC
    Value: !GetAtt CloudPublicSubnet2.SubnetId
    Export:      
      Name: !Sub "${AWS::StackName}-CloudPublicSubnet2"      
  CloudPrivateSubnet1:
    Description: Private Subnet 1 for Cloud VPC
    Value: !GetAtt CloudPrivateSubnet1.SubnetId
    Export:      
      Name: !Sub "${AWS::StackName}-CloudPrivateSubnet1"
  CloudPrivateSubnet2:
    Description: Private Subnet 2 for Cloud VPC
    Value: !GetAtt CloudPrivateSubnet2.SubnetId
    Export:      
      Name: !Sub "${AWS::StackName}-CloudPrivateSubnet2"      
  CloudVPCCidr:
    Description: VPC CIDR
    Value: !GetAtt CloudVPC.CidrBlock
    Export:      
      Name: !Sub "${AWS::StackName}-CloudVPCCidr"
